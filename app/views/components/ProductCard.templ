package components

import (
    "fmt"
    "ecomm-go/db/goqueries"
)

func truncate(s string, n int) string {
	if len(s) > n {
		return fmt.Sprintf("%s...", s[:n])
	}
	return s
}

templ ProductCard(item goqueries.GetProductsByCategoriesAndNameRow, isSigned bool) {
    <div class="relative">
        <a
            href={templ.SafeURL(fmt.Sprintf("/products/%d", item.ID))}
            class="flex flex-col justify-self-center group w-[280px] transform duration-300 group"

        >
            <!-- Product Image -->
            <div class="relative w-full h-60 bg-gray-200 flex items-center justify-center rounded-t-xl">

                <img src={fmt.Sprintf("https://picsum.photos/seed/%d/200/200", item.ID) } alt={item.Name} class="object-cover w-full h-full rounded-t-xl" >

                <div class="flex absolute bg-black w-full h-full rounded-t-xl opacity-0 group-hover:opacity-10 transform duration-300 justify-center items-center">
                </div>
                <div class="absolute border border-white rounded-full px-2 text-white opacity-0 group-hover:opacity-100 transform duration-300">
                    Show details
                </div>
            </div>

            <!-- Product Details -->
            <div class=" p-4 border-b-2 border-x-2 border-gray-100 rounded-b-xl group-hover:border-heavy-metal-600 group-hover:bg-heavy-metal-600 transform duration-300 group-hover:text-white text-black">
                <p class="text-sm mb-1 text-gray-800 group-hover:text-white transform duration-300 ">{ truncate(item.Description, 16)}</p>
                <h3 class="text-lg font-semibold mb-4 ">{item.Name}</h3>

                <div class="flex items-center justify-between">
                    <p class="">from ${fmt.Sprintf("%.2f", float64(item.Price)/100)}</p>


                    if item.Special.Valid == true{
                        <p class="text-white rounded-full bg-heavy-metal-800 px-3">{item.Name_2.String}</p>
                    }
                </div>
            </div>
        </a>

        {{ var favouriteClasses string }}
        if item.IsFavourite {
            {{ favouriteClasses = "fill-timber-green-700 group-hover/love:fill-transparent"}}
        }else{
            {{ favouriteClasses = "fill-transparent group-hover/love:fill-timber-green-700"}}
        }

        if isSigned {
            <div
                class="group/love absolute right-2 top-2 z-20 bg-hawaiian-tan-50 rounded-full bg-opacity-50 p-1"
                hx-post="/api/add-to-favourites"
                hx-target={fmt.Sprint("#love-icon-",item.ID)}
                hx-vals={fmt.Sprintf(`{"product_id":"%d"}`, item.ID)}
                hx-swap="outerHTML"
                hx-trigger="click"
            >
                @LoveIcon(favouriteClasses, item.ID)
            </div>
        }
    </div>


}